public abstract class Advertisement
{
    private int advertisementId;
    private string priority;
    private int no_of_days;
    private string clientName;

    public Advertisement(int advertisementId, string priority, int no_of_days, string clientName)
    {
        AdvertisementId = advertisementId;
        Priority = priority;
        No_of_days = no_of_days;
        ClientName = clientName;
    }

    public int AdvertisementId
    {
        get { return advertisementId; }
        set { advertisementId = value; }
    }

    public string Priority
    {
        get { return priority; }
        set { priority = value; }
    }

    public int No_of_days
    {
        get { return no_of_days; }
        set { no_of_days = value; }
    }

    public string ClientName
    {
        get { return clientName; }
        set { clientName = value; }
    }

    public abstract float CalculateAdvertisementCharge(int baseCost, string Priority, int No_of_Days);
}

public class VideoAdvertisement : Advertisement
{
    private int duration;

    public VideoAdvertisement(int advertisementId, string priority, int no_of_days, string clientName, int duration) : base(advertisementId, priority, no_of_days, clientName)
    {
        Duration = duration;
    }

    public int Duration
    {
        get { return duration; }
        set { duration = value; }
    }

    public override float CalculateAdvertisementCharge(int baseCost, string Priority, int No_of_Days)
    {
        float advertisementCost = baseCost * Duration * No_of_days;
        float boosterCost = 0;

        if (Priority == "high")
        {
            boosterCost = advertisementCost * 0.1f;
        }
        else if (Priority == "medium")
        {
            boosterCost = advertisementCost * 0.07f;
        }

        float serviceCost = 0;

        if (Priority == "high")
        {
            serviceCost = 1000;
        }
        else if (Priority == "medium")
        {
            serviceCost = 700;
        }
        else
        {
            serviceCost = 200;
        }

        return advertisementCost + boosterCost + serviceCost;
    }
}

public class ImageAdvertisement : Advertisement
{
    private int inches;

    public ImageAdvertisement(int advertisementId, string priority, int no_of_days, string clientName, int inches) : base(advertisementId, priority, no_of_days, clientName)
    {
        Inches = inches;
    }

    public int Inches
    {
        get { return inches; }
        set { inches = value; }
    }

    public override float CalculateAdvertisementCharge(int baseCost, string Priority, int No_of_Days)
    {
        float advertisementCost = baseCost * Inches * No_of_days;
        float boosterCost = 0;

        if (Priority == "high")
        {
            boosterCost = advertisementCost * 0.1f;
        }
        else if (Priority == "medium")
        {
            boosterCost = advertisementCost * 0.07f;
        }

        float serviceCost = 0;

        if (Priority == "high")
        {
            serviceCost = 1000;
        }
        else if (Priority == "medium")
        {
            serviceCost = 700;
        }
        else
        {
            serviceCost = 200;
        }

        return advertisementCost + boosterCost + serviceCost;
    }
}

public class TextAdvertisement : Advertisement
{
    private int no_of_characters;

   
